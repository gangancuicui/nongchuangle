{"version":3,"sources":["uni-app:///main.js","webpack:///D:/mini Program/heimayougou - 副本 (2)/subpkg/pl/pl.vue?bd3b","webpack:///D:/mini Program/heimayougou - 副本 (2)/subpkg/pl/pl.vue?6e70","webpack:///D:/mini Program/heimayougou - 副本 (2)/subpkg/pl/pl.vue?5b67","webpack:///D:/mini Program/heimayougou - 副本 (2)/subpkg/pl/pl.vue?6a38","uni-app:///subpkg/pl/pl.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","components","richText","data","readOnly","title","coverimg","userinfo","placeholder","textTool","id","index","onLoad","console","onShow","methods","getCurrDateStr","m","d","addData","mask","uni","authorname","cTime","content","wzid","then","catch","addRes","icon","delta","onKeyInput","bindPickerChange","uploadPaper","upimg","count","mediaType","sourceType","camera","success","upImgToDB","cloudPath","filePath","duration","onEditorReady","setContents","html","undo","restore","clear","clearBeforeEvent","cancelText","confirmText","fail","clearSuccess","removeFormat","insertImageEvent","insertImageMethod","getEditorContent","showTextTool","bindfocus","bindblur","bindinput","app","preview","url"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,WAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAA+G;AAC/G;AACsD;AACL;;;AAGjD;AAC4L;AAC5L,gBAAgB,sMAAU;AAC1B,EAAE,wEAAM;AACR,EAAE,6EAAM;AACR,EAAE,sFAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,iFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,wLAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAA4tB,CAAgB,yuBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;ACmChvB;AAAA;EAAA;IAAA;EAAA;AAAA;AACA;AACA;AAAA,eACA;EACAC;IACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACA;MACAC;MAEAC;MACAC;MACAC;IACA;EACA;EACA;AACA;AACA;EACAC;IACAC;IACAA;IACA;IACA;EACA;EACA;AACA;AACA;EACAC;EACAC;IAEAC;MACA;MACA;MACA;MACAC;MACA;MACAC;MACA;IACA;IAEAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAvB;kBACAS;kBACAe;gBACA;gBAAA;gBAAA,OACAC;kBACAlB;oBACAmB;oBACAC;oBACAC;oBACAnB;oBACAoB;kBACA;gBACA,GACAC;kBACA;gBACA,GACAC;kBACA;gBACA;cAAA;gBAdAC;gBAeAhC;gBACAiB;gBAAA,IACAe;kBAAA;kBAAA;gBAAA;gBACAhC;kBACAS;kBACAwB;gBACA;gBAAA;cAAA;gBAGAjC;kBACAS;kBACAwB;gBACA;gBACAjC;kBACAkC;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACArB;MACAQ;QACAc;QACAC;QACAC;QACAC;QACAC;UACA1B;UACA;QACA;MACA;IACA;IACA2B;MAAA;MACA5C;QACA6C;QACAC;MACA;QACA;MACA;QACArB;UACAhB;UACAwB;UACAc;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA/B;MACA;MACAX;IACA;IAEA;IACA2C;MACA;QACAC;QACAP;UACA1B;QACA;MACA;IACA;IAEA;IACAkC;MACA;MACA;MACA;MACAlC;IACA;IAEA;IACAmC;MACA;MACA;MACA;MACAnC;IACA;IAEA;IACAoC;MACA;QACAV;UACA1B;QACA;MACA;IACA;IAEA;IACAqC;MAAA;MACA;MACA;MACA;MACArC;MACAQ;QACA8B;QACAC;QACA5B;QACAe;UACA;YACA;UACA;QACA;QACAc;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACAzC;IACA;IAEA;IACA0C;MACA;IACA;IAEA;IACAC;MAAA;MACA;MACA;MACA;MACA3C;MACAQ;QACAc;QACAI;UAEA;UACA;UACA1B;UACA;UACA;UACAjB;YACA6C;YACAC;UACA;YACA7B;YACA,sBACA4C,8BACA/B;cACAb;YACA,GACAc;cACAd;YACA;UACA;YACAQ;cACAhB;cACAwB;cACAc;YACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA;IACA;IAEA;IACAe;MACA;MACA;MACA;MACA;MACA7C;MACAQ;QACAhB;QACAwB;MACA;MACAhB;IACA;IAEA;IACA8C;MACA;QACAlD;MACA;IACA;IAEA;IACAmD;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACAjD;MACAA;MACAkD;IAEA;IAEA;IACAC;MACA3C;QACA4C;MACA;IACA;EACA;AACA;AAAA,2B","file":"subpkg/pl/pl.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './subpkg/pl/pl.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./pl.vue?vue&type=template&id=6ce0998c&\"\nvar renderjs\nimport script from \"./pl.vue?vue&type=script&lang=js&\"\nexport * from \"./pl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"subpkg/pl/pl.vue\"\nexport default component.exports","export * from \"-!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pl.vue?vue&type=template&id=6ce0998c&\"","var components\ntry {\n  components = {\n    richText: function () {\n      return import(\n        /* webpackChunkName: \"components/richText/richText\" */ \"@/components/richText/richText.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./pl.vue?vue&type=script&lang=js&\"","<template>\n\t<view>\n\t\t<view class=\"editor\">\r\n\t\t\t<richText\r\n\t\t\t    ref=\"richText\"\r\n\t\t\t    :readOnly=\"readOnly\"\r\n\t\t\t    :placeholder=\"placeholder\"\r\n\t\t\t    formatDate=\"YY/MM/DD\"\r\n\t\t\t    buttonTxt=\"保存\"\r\n\t\t\t    @clearBeforeEvent=\"clearBeforeEvent($event, { tagId: 'richText' })\"\r\n\t\t\t    @clearSuccess=\"clearSuccess($event, { tagId: 'richText' })\"\r\n\t\t\t    @undo=\"undo($event, { tagId: 'richText' })\"\r\n\t\t\t    @restore=\"restore($event, { tagId: 'richText' })\"\r\n\t\t\t    @onEditorReady=\"onEditorReady($event, { tagId: 'richText' })\"\r\n\t\t\t    @bindfocus=\"bindfocus($event, { tagId: 'richText' })\"\r\n\t\t\t    @bindblur=\"bindblur($event, { tagId: 'richText' })\"\r\n\t\t\t    @bindinput=\"bindinput($event, { tagId: 'richText' })\"\r\n\t\t\t    @insertImageEvent=\"insertImageEvent($event, { tagId: 'richText' })\"\r\n\t\t\t    @getEditorContent=\"getEditorContent($event, { tagId: 'richText' })\"\r\n\t\t\t></richText>\r\n\t\t\t<!--<view class=\"tip\">\r\n\t\t\t    备注：\r\n\t\t\t    <view>1.改变图片大小，按住节点一小会儿再拖动。别问我为什么，谁还没遇到点难解决需求了。</view>\r\n\t\t\t    <view>2.预览内容中，图片仅支持网络url。</view>\r\n\t\t\t</view>-->\r\n\t\t</view>\r\n\t\t\r\n\t\t<view class=\"up-load-paper\">\r\n\t\t\t<button type=\"primary\" @click=\"uploadPaper\">分享</button>\r\n\t\t</view>\n\t</view>\n</template>\n\n<script>\nimport richText from '../../components/richText/richText';\r\nimport { mapState, mapMutations } from 'vuex'\nconst app = getApp();\n//let richText = null; //富文本编辑器实例\nexport default {\n    components: {\n        richText\r\n\t\t//...mapState('m_user', ['userinfo'])\n    },\n    data() {\n        return {\n            readOnly: false,\n\t\t\ttitle:'',\r\n\t\t\tcoverimg:\"\",\r\n\t\t\tuserinfo:JSON.parse(uni.getStorageSync('userinfo') || '{}'),\n            //编辑器是否只读\n            placeholder: '开始编辑吧...',\n\t\t\t\n            textTool: '',\r\n\t\t\tid:'',\r\n\t\t\tindex: 0,\n        };\n    },\n    /**\n     * 生命周期函数--监听页面加载\n     */\n    onLoad(options) {\r\n\t\tconsole.log(this.userinfo)\r\n\t\tconsole.log(this.getCurrDateStr())\r\n\t\t//console.log(this.array[this.index])\r\n\t\tthis.id=options.id\r\n\t},\n    /**\n     * 生命周期函数--监听页面显示\n     */\n    onShow: function () {},\n    methods: {\r\n\t\t\r\n\t\tgetCurrDateStr() {\r\n\t\t  var date = new Date();  \r\n\t\t  var y = date.getFullYear();\r\n\t\t  var m = date.getMonth() + 1; \r\n\t\t  m = m < 10 ? '0' + m : m;\r\n\t\t  var d = date.getDate();\r\n\t\t  d = d < 10 ? '0' + d : d;\r\n\t\t  return y + '-' + m + '-' + d;\r\n\t\t},\r\n\t\t\r\n\t\tasync addData(){\r\n\t\t\twx.showLoading({\r\n\t\t\t      title: \"插入中\",\r\n\t\t\t      mask: true\r\n\t\t\t    })\r\n\t\t\t    const addRes = await uni.cloud.database().collection(\"pinglun\").add({\r\n\t\t\t        data:{\r\n\t\t\t\t\t\tauthorname: this.userinfo.nickName,\r\n\t\t\t\t\t\tcTime:this.getCurrDateStr(),\r\n\t\t\t\t\t\tcontent:app.globalData.data.richTextContents,\r\n\t\t\t\t\t\ttitle:this.userinfo.avatarUrl,\r\n\t\t\t\t\t\twzid:this.id\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t      })\r\n\t\t\t      .then(res => {\r\n\t\t\t        return res\r\n\t\t\t      })\r\n\t\t\t      .catch(err => {\r\n\t\t\t        return err\r\n\t\t\t      })\r\n\t\t\t    wx.hideLoading()\r\n\t\t\t    console.log(addRes)\r\n\t\t\t    if (!addRes._id) {\r\n\t\t\t      wx.showToast({\r\n\t\t\t        title: \"插入失败\",\r\n\t\t\t        icon: \"error\"\r\n\t\t\t      })\r\n\t\t\t      return\r\n\t\t\t    }\r\n\t\t\t    wx.showToast({\r\n\t\t\t      title: \"插入成功\",\r\n\t\t\t      icon: \"success\"\r\n\t\t\t    })\r\n\t\t\t\twx.navigateBack({\r\n\t\t\t\t  delta: 1\r\n\t\t\t\t})\r\n\t\t},\r\n\t\tonKeyInput(e){\r\n\t\t\tthis.title=e.detail.value\r\n\t\t},\r\n\t\tbindPickerChange(e){\r\n\t\t\tthis.index=e.detail.value\r\n\t\t},\r\n\t\tuploadPaper(e){\r\n\t\t\tthis.addData()\r\n\t\t},\r\n\t\tupimg(e){\r\n\t\t\tconsole.log(this.userinfo)\r\n\t\t\tuni.chooseMedia({\r\n\t\t\t\tcount:1,\r\n\t\t\t\tmediaType:['image'],\r\n\t\t\t\tsourceType:['album', 'camera'],\r\n\t\t\t\tcamera:'back',\r\n\t\t\t\tsuccess:(res) =>{\r\n\t\t\t\t\tconsole.log(res.tempFiles[0].tempFilePath)\r\n\t\t\t\t\tthis.upImgToDB(res.tempFiles[0].tempFilePath)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tupImgToDB(path){\r\n\t\t\twx.cloud.uploadFile({\r\n\t\t\t\tcloudPath:\"photo/\"+Date.now()+\"/\"+this.userinfo.nickName+\".jpg\",\r\n\t\t\t\tfilePath:path\r\n\t\t\t}).then(res=>{\r\n\t\t\t\tthis.coverimg=res.fileID\r\n\t\t\t}).catch(error => {\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle:\"失败\",\r\n\t\t\t\t\ticon:'error', \r\n\t\t\t\t\tduration: 2000\r\n\t\t\t\t})\n\t\t\t})\r\n\t\t},\n        // 编辑器初始化完成时触发，可以获取组件实例\n        onEditorReady(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\n            console.log('[onEditorReady callback]');\n            //console.log(this.zpSelectComponent('#richText'));\n            richText =  this.createSelectorQuery('#richText'); //获取组件实例\n        },\n\n        //设置富文本内容\n        setContents(rechtext) {\n            this.editorCtx.setContents({\n                html: rechtext,\n                success: (res) => {\n                    console.log('[setContents success]', res);\n                }\n            });\n        },\n\n        //撤销\n        undo(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\n            console.log('[undo callback]');\n        },\n\n        //恢复\n        restore(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\n            console.log('[restore callback]');\n        },\n\n        //清空编辑器内容\n        clear() {\n            this.editorCtx.clear({\n                success: (res) => {\n                    console.log('[clear success]', res);\n                }\n            });\n        },\n\n        //清空编辑器事件\n        clearBeforeEvent(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\n            console.log('[clearBeforeEvent callback]');\n            uni.showModal({\n                cancelText: '取消',\n                confirmText: '确认',\n                content: '确认清空编辑器内容吗？',\n                success: (result) => {\n                    if (result.confirm) {\n                        this.$refs.richText.clear();\n                    }\n                },\n                fail: (res) => {}\n            });\n        },\n\n        //清空编辑器成功回调\n        clearSuccess(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\n            console.log('[clearSuccess callback]');\n        },\n\n        //清除当前选区的样式\n        removeFormat() {\n            this.editorCtx.removeFormat();\n        },\n\n        //插入图片\n        insertImageEvent(e, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(e, _dataset);\n            /* ---处理dataset end--- */\r\n\t\t\tconsole.log(1)\n            uni.chooseImage({\n                count: 1,\n                success: (res) => {\n                    \r\n\t\t\t\t\t//var _this=this\r\n\t\t\t\t\t//0.console.log(1)\r\n\t\t\t\t\tconsole.log(res);\n                    let path = res.tempFilePaths[0];\n                    //调用子组件方法，图片应先上传再插入，不然预览时无法查看图片。\r\n\t\t\t\t\twx.cloud.uploadFile({\r\n\t\t\t\t\t\t\tcloudPath:\"评论/\"+Date.now()+\"/\"+this.userinfo.nickName+\".jpg\",\r\n\t\t\t\t\t\t\tfilePath:path\r\n\t\t\t\t\t\t}).then(res=>{\r\n\t\t\t\t\t\t\tconsole.log(res.fileID)\r\n\t\t\t\t\t\t\tthis.$refs.richText\r\n\t\t\t\t\t\t\t    .insertImageMethod(res.fileID)\r\n\t\t\t\t\t\t\t    .then((res) => {\r\n\t\t\t\t\t\t\t        console.log('[insert image success callback]=>', res);\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .catch((res) => {\r\n\t\t\t\t\t\t\t        console.log('[insert image fail callback]=>', res);\r\n\t\t\t\t\t\t\t    });\r\n\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle:\"失败\",\r\n\t\t\t\t\t\t\t\ticon:'error', \r\n\t\t\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\t\t\t\t\t\t\r\n\t\t\t\t\t//console.log(path)\r\n\t\t\t\t\t// this.$refs.richText\n     //                    .insertImageMethod(path)\n     //                    .then((res) => {\n     //                        console.log('[insert image success callback]=>', res);\n     //                    })\n     //                    .catch((res) => {\n     //                        console.log('[insert image fail callback]=>', res);\n     //                    });\n                }\n            });\n        },\n\n        //保存，获取编辑器内容\n        getEditorContent(res, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(res, _dataset);\n            /* ---处理dataset end--- */\n            let { value } = res.detail;\r\n\t\t\tconsole.log(res.detail.__args__[0].detail.value.html)\n            uni.showToast({\n                title: '获取编辑器内容成功',\n                icon: 'none'\n            });\n            console.log('[getEditorContent callback]=>', value);\n        },\n\n        //show文本工具栏\n        showTextTool() {\n            this.setData({\n                textTool: !this.textTool\n            });\n        },\n\n        //编辑器聚焦时触发\n        bindfocus(res, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(res, _dataset);\n            /* ---处理dataset end--- */\n            let { value } = res.detail;\n            // console.log('[bindfocus callback]=>', value)\n        },\n\n        //编辑器失去焦点时触发\n        bindblur(res, _dataset) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(res, _dataset);\n            /* ---处理dataset end--- */\n            let { value } = res.detail;\n            // console.log('[bindblur callback]=>', value)\n        },\n\n        //编辑器输入中时触发\n        bindinput(res) {\n            /* ---处理dataset begin--- */\n            //this.handleDataset(res, _dataset);\n            /* ---处理dataset end--- */\n            let { value } = res.detail;\r\n\t\t\t//console.log(res.detail.__args__[0].detail.value.detail.html)\n            // console.log('[bindinput callback]=>', value)\r\n\t\t\tconsole.log(1)\r\n\t\t\tconsole.log( app.globalData)\n            app.globalData.data.richTextContents = res.detail.__args__[0].detail.value.detail.html;\r\n\t\t\t\n        },\n\n        //预览富文本\n        preview() {\n            uni.navigateTo({\n                url: `../preview/preview`\n            });\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\">\n\n</style>\n"],"sourceRoot":""}